name: Tests and Linting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test CA-2D basic functionality
      run: |
        python code/ca_2d/grid.py
    
    - name: Test experiment runner
      run: |
        python run_experiments.py --grid-size 5 --iterations 3 --interaction-steps 2
    
    - name: Run pytest (when test files exist)
      run: |
        if [ -d "tests" ] && [ "$(ls -A tests)" ]; then
          pytest tests/
        else
          echo "No tests directory or empty tests directory - skipping pytest"
        fi

  basic-functionality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify project structure
      run: |
        ls -la
        ls -la code/ca_2d/
        ls -la results/
    
    - name: Quick integration test
      run: |
        echo "=== Testing CA-2D Grid ==="
        python -c "from code.ca_2d.grid import CA2D; ca = CA2D(); ca.update(5); print(f'Conductivity: {ca.information_conductivity():.4f}')"
        
        echo "=== Testing Experiment Runner ==="
        python run_experiments.py --grid-size 5 --iterations 2 --interaction-steps 2
        
        echo "=== Checking Results ==="
        ls -la results/
        if [ -d "results/run001" ]; then
          echo "✅ Results directory created successfully"
          ls -la results/run001/
        else
          echo "❌ Results directory not found"
          exit 1
        fi